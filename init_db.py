#!/usr/bin/env python3
"""
Script kh·ªüi t·∫°o database v√† th√™m d·ªØ li·ªáu m·∫´u
"""

import os
import sys
from datetime import datetime

# Th√™m th∆∞ m·ª•c g·ªëc v√†o path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import init_db, SessionLocal
from app.models import Product, ProductLog

def create_sample_data():
    """T·∫°o d·ªØ li·ªáu m·∫´u cho h·ªá th·ªëng"""
    db = SessionLocal()
    
    try:
        # Ki·ªÉm tra xem ƒë√£ c√≥ d·ªØ li·ªáu ch∆∞a
        existing_products = db.query(Product).count()
        if existing_products > 0:
            print("‚ö†Ô∏è  Database ƒë√£ c√≥ d·ªØ li·ªáu, b·ªè qua vi·ªác t·∫°o d·ªØ li·ªáu m·∫´u")
            return
        
        # T·∫°o s·∫£n ph·∫©m m·∫´u
        sample_products = [
            {
                "name": "Laptop Dell Inspiron 15",
                "sku": "DELL-INS15-001",
                "price": 15000000,
                "quantity": 10,
                "category": "Laptop",
                "description": "Laptop Dell Inspiron 15 inch, Intel i5, 8GB RAM, 256GB SSD"
            },
            {
                "name": "Chu·ªôt kh√¥ng d√¢y Logitech",
                "sku": "LOG-MOUSE-001",
                "price": 500000,
                "quantity": 25,
                "category": "Ph·ª• ki·ªán",
                "description": "Chu·ªôt kh√¥ng d√¢y Logitech M185, pin AA"
            },
            {
                "name": "B√†n ph√≠m c∆° Keychron K2",
                "sku": "KEY-K2-001",
                "price": 2500000,
                "quantity": 3,
                "category": "Ph·ª• ki·ªán",
                "description": "B√†n ph√≠m c∆° Keychron K2, switch Brown, RGB"
            },
            {
                "name": "M√†n h√¨nh LG 24 inch",
                "sku": "LG-24-001",
                "price": 3500000,
                "quantity": 8,
                "category": "M√†n h√¨nh",
                "description": "M√†n h√¨nh LG 24 inch Full HD, IPS"
            },
            {
                "name": "Tai nghe Sony WH-1000XM4",
                "sku": "SONY-WH4-001",
                "price": 8000000,
                "quantity": 2,
                "category": "√Çm thanh",
                "description": "Tai nghe ch·ªëng ·ªìn Sony WH-1000XM4"
            }
        ]
        
        print("üì¶ ƒêang t·∫°o d·ªØ li·ªáu m·∫´u...")
        
        for product_data in sample_products:
            product = Product(**product_data)
            db.add(product)
            db.commit()
            db.refresh(product)
            
            # T·∫°o log cho s·∫£n ph·∫©m m·ªõi
            log = ProductLog(
                product_id=product.id,
                action="create",
                changed_by="admin"
            )
            db.add(log)
            
            print(f"‚úÖ ƒê√£ t·∫°o s·∫£n ph·∫©m: {product.name}")
        
        db.commit()
        print(f"üéâ ƒê√£ t·∫°o th√†nh c√¥ng {len(sample_products)} s·∫£n ph·∫©m m·∫´u!")
        
    except Exception as e:
        print(f"‚ùå L·ªói khi t·∫°o d·ªØ li·ªáu m·∫´u: {e}")
        db.rollback()
    finally:
        db.close()

def main():
    """H√†m ch√≠nh"""
    print("üöÄ Kh·ªüi t·∫°o h·ªá th·ªëng Qu·∫£n l√Ω B√°n h√†ng...")
    
    # Kh·ªüi t·∫°o database
    print("üìä ƒêang kh·ªüi t·∫°o database...")
    init_db()
    print("‚úÖ Database ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o th√†nh c√¥ng!")
    
    # T·∫°o d·ªØ li·ªáu m·∫´u
    create_sample_data()
    
    print("\nüéØ H·ªá th·ªëng ƒë√£ s·∫µn s√†ng!")
    print("üìù ƒê·ªÉ ch·∫°y ·ª©ng d·ª•ng, s·ª≠ d·ª•ng l·ªánh:")
    print("   python -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8000")
    print("\nüåê Truy c·∫≠p: http://localhost:8000")

if __name__ == "__main__":
    main() 